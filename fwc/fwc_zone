#!/usr/bin/python
import re

# Modify firewall zones in list
zones = ["SDUnet", "labnet", "DMZnet", "mgmtnet", "labvpn","sdudmznet"]
chains = []
forward_chains = []        
input_chains = []
output_chains = []

# TODO:
# add -i and -o to forward, input and output - maybe -s and -d ...
# Maybe merge fwc_policy and fwc_zones  and read config from file ? 


def policyNameConvension(fromZone, toZone):
        # Could be ex. "%FROM%To%TO%"
        return fromZone.title() + "To" + toZone.title()


# don't changes this, as this is required to inbound/outbound traffic of the firewall itself.
LOCAL = "local"
zones.append(LOCAL)

print "# This script is autogenerated. Changes will be overwritten"

for fromZone in zones:
    zonesExcludeFrom = [zone for zone in zones if zone != fromZone]
    for toZone in zonesExcludeFrom:

        chain = {"fromZone": fromZone, "toZone": toZone}
        if toZone == LOCAL:
            input_chains.append(chain)
        elif fromZone == LOCAL:
            output_chains.append(chain)
        else:
            forward_chains.append(chain)
            
        zoneName = policyNameConvension(chain["fromZone"], chain["toZone"])
        print "$iptables -N {0}".format(zoneName)


print "#","-"*30, "Input rules","-"*30
for chain in input_chains:
    zoneName = policyNameConvension(chain["fromZone"], chain["toZone"])
    print "$iptables -A INPUT -i ${0}_IF -j {1} ".format(chain["fromZone"].upper(), zoneName)


print "#","-"*30, "Output rules","-"*30
for chain in output_chains:
    zoneName = policyNameConvension(chain["fromZone"], chain["toZone"])
    print "$iptables -A OUTPUT -o ${0}_IF -j {1} ".format(chain["toZone"].upper(), zoneName)


print "#","-"*30, "Forward rules","-"*30

# get unique list items
#forward_chains = list(set(forward_chains))
for chain in forward_chains:
    zoneName = policyNameConvension(chain["fromZone"], chain["toZone"])
    print "$iptables -A FORWARD -i ${0}_IF -o ${1}_IF -j {2}".format(chain["fromZone"].upper(),chain["toZone"].upper(), zoneName)
